/*
 * stm32f411.h
 *
 *  Created on: Sep 2, 2023
 *      Author: Dell
 */

#ifndef INC_STM32F411_H_
#define INC_STM32F411_H_

#define __vo volatile
#include <stdint.h>

//Base address of Flash and SRAM memories

#define FLASH_BASEADDR			0x08000000U
#define SRAM1_BASEADDR			0x20000000U
#define ROM_BASEADDR			0x1FFF0000U
#define SRAM					SRAM1_BASEADDR

//AHBx and APBx Bus Peripherals base address

#define PERIPH_BASEADDR			0x40000000U
#define APB1PERIPH_BASEADDR		PERIPH_BASEADDR
#define APB2PERIPH_BASEADDR		0x40010000U
#define AHB1PERIPH_BASEADDR		0x40020000U
#define AHB2PERIPH_BASEADDR		0x50000000U

//Base address of Peripherals hanging on AHB1 bus

#define GPIOA_BASEADDR			(AHB1PERIPH_BASEADDR + 0x0000)
#define GPIOB_BASEADDR			(AHB1PERIPH_BASEADDR + 0x0400)
#define GPIOC_BASEADDR			(AHB1PERIPH_BASEADDR + 0x0800)
#define GPIOD_BASEADDR			(AHB1PERIPH_BASEADDR + 0x0C00)
#define GPIOE_BASEADDR			(AHB1PERIPH_BASEADDR + 0x1000)
#define GPIOH_BASEADDR			(AHB1PERIPH_BASEADDR + 0x1C00)

#define RCC_BASEADDR			(AHB1PERIPH_BASEADDR + 0x3800)

//Base address of Peripherals hanging on APB1 bus

#define I2C1_BASEADDR			(APB1PERIPH_BASEADDR + 0x5400)
#define I2C2_BASEADDR			(APB1PERIPH_BASEADDR + 0x5800)
#define I2C3_BASEADDR			(APB1PERIPH_BASEADDR + 0x5C00)
#define SPI2_BASEADDR			(APB1PERIPH_BASEADDR + 0x3800)
#define SPI3_BASEADDR			(APB1PERIPH_BASEADDR + 0x3C00)
#define USART2_BASEADDR			(APB1PERIPH_BASEADDR + 0x4400)

//Base address of Peripherals hanging on APB2 bus

#define SPI1_BASEADDR			(APB2PERIPH_BASEADDR + 0x3000)
#define USART1_BASEADDR			(APB2PERIPH_BASEADDR + 0x1000)
#define USART6_BASEADDR			(APB2PERIPH_BASEADDR + 0x1400)
#define EXTI_BASEADDR			(APB2PERIPH_BASEADDR + 0x3C00)
#define SYSCFG_BASEADDR			(APB2PERIPH_BASEADDR + 0x3800)

//Define struct of GPIO

typedef struct
{
	__vo uint32_t MODER;
	__vo uint32_t OTYPER;
	__vo uint32_t OSPEEDR;
	__vo uint32_t PUPDR;
	__vo uint32_t IDR;
	__vo uint32_t ODR;
	__vo uint32_t BSRR;
	__vo uint32_t LCKR;
	__vo uint32_t AFR[2];
}GPIO_RegDef_t;

//Define struct of RCC

typedef struct
{
	__vo uint32_t CR;
	__vo uint32_t PLLCFGR;
	__vo uint32_t CFGR;
	__vo uint32_t CIR;
	__vo uint32_t AHB1RSTR;
	__vo uint32_t AHB2RSTR;
	uint32_t RESERVED1[2];
	__vo uint32_t APB1RSTR;
	__vo uint32_t APB2RSTR;
	uint32_t RESERVED2[2];
	__vo uint32_t AHB1ENR;
	__vo uint32_t AHB2ENR;
	uint32_t RESERVED3[2];
	__vo uint32_t APB1ENR;
	__vo uint32_t APB2ENR;
	uint32_t RESERVED4[2];
	__vo uint32_t AHB1LPENR;
	__vo uint32_t AHB2LPENR;
	uint32_t RESERVED5[2];
	__vo uint32_t APB1LPENR;
	__vo uint32_t APB2LPENR;
	uint32_t RESERVED6[2];
	__vo uint32_t BDCR;
	__vo uint32_t CSR;
	uint32_t RESERVED7[2];
	__vo uint32_t SSCGR;
	__vo uint32_t PLLI2SCFGR;
	uint32_t RESERVED8[2];
	__vo uint32_t DCKCFGR;
}RCC_RegDef_t;

//Peripheral definition
#define GPIOA					((GPIO_RegDef_t*)GPIOA_BASEADDR)
#define GPIOB					((GPIO_RegDef_t*)GPIOB_BASEADDR)
#define GPIOC					((GPIO_RegDef_t*)GPIOC_BASEADDR)
#define GPIOD					((GPIO_RegDef_t*)GPIOD_BASEADDR)
#define GPIOE					((GPIO_RegDef_t*)GPIOE_BASEADDR)
#define GPIOH					((GPIO_RegDef_t*)GPIOH_BASEADDR)

#define RCC						((RCC_RegDef_t*)RCC_BASEADDR)

//Clock Enable Macros for GPIOx peripherals
#define GPIOA_PCLK_EN()			(RCC->AHB1ENR |= (1<<0))
#define GPIOB_PCLK_EN()			(RCC->AHB1ENR |= (1<<1))
#define GPIOC_PCLK_EN()			(RCC->AHB1ENR |= (1<<2))
#define GPIOD_PCLK_EN()			(RCC->AHB1ENR |= (1<<3))
#define GPIOE_PCLK_EN()			(RCC->AHB1ENR |= (1<<4))
#define GPIOH_PCLK_EN()			(RCC->AHB1ENR |= (1<<7))

//Clock Enable Macros for I2Cx peripherals
#define I2C1_PCLK_EN()			(RCC->APB1LPENR |= (1<<21))
#define I2C2_PCLK_EN()			(RCC->APB1LPENR |= (1<<22))
#define I2C3_PCLK_EN()			(RCC->APB1LPENR |= (1<<23))

//Clock Enable Macros for SPIx peripherals
#define SPI1_PCLK_EN()			(RCC->APB2ENR |= (1<<12))
#define SPI2_PCLK_EN()			(RCC->APB1ENR |= (1<<14))
#define SPI3_PCLK_EN()			(RCC->APB1ENR |= (1<<15))

//Clock Enable Macros for USARTx peripherals
#define USART1_PCLK_EN()		(RCC->APB2ENR |= (1<<4))
#define USART6_PCLK_EN()		(RCC->APB2ENR |= (1<<5))
#define USART2_PCLK_EN()		(RCC->APB1ENR |= (1<<17))

//Clock Enable Macros for SYSCFG peripherals
#define SYSCFG_PCLK_EN()		(RCC->APB2ENR |= (1<<14))

//Clock Disable Macros for GPIOx peripherals
#define GPIOA_PCLK_DI()			(RCC->AHB1ENR &= ~(1<<0))
#define GPIOB_PCLK_DI()			(RCC->AHB1ENR &= ~(1<<1))
#define GPIOC_PCLK_DI()			(RCC->AHB1ENR &= ~(1<<2))
#define GPIOD_PCLK_DI()			(RCC->AHB1ENR &= ~(1<<3))
#define GPIOE_PCLK_DI()			(RCC->AHB1ENR &= ~(1<<4))
#define GPIOH_PCLK_DI()			(RCC->AHB1ENR &= ~(1<<7))

//Clock Disable Macros for I2Cx peripherals
#define I2C1_PCLK_DI()			(RCC->APB1LPENR &= ~(1<<21))
#define I2C2_PCLK_DI()			(RCC->APB1LPENR &= ~(1<<22))
#define I2C3_PCLK_DI()			(RCC->APB1LPENR &= ~(1<<23))

//Clock Disable Macros for SPIx peripherals
#define SPI1_PCLK_DI()			(RCC->APB2ENR &= ~(1<<12))
#define SPI2_PCLK_DI()			(RCC->APB1ENR &= ~(1<<14))
#define SPI3_PCLK_DI()			(RCC->APB1ENR &= ~(1<<15))

//Clock Disable Macros for USARTx peripherals
#define USART1_PCLK_DI()		(RCC->APB2ENR &= ~(1<<4))
#define USART6_PCLK_DI()		(RCC->APB2ENR &= ~(1<<5))
#define USART2_PCLK_DI()		(RCC->APB1ENR &= ~(1<<17))

//Clock Disable Macros for SYSCFG peripherals
#define SYSCFG_PCLK_DI()		(RCC->APB2ENR &= ~(1<<14))

//Some generic Macro
#define ENABLE			1
#define DISABLE			0
#define SET				ENABLE
#define RESET			DISABLE

#endif /* INC_STM32F411_H_ */
